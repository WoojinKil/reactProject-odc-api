plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.4'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.odc.api'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-security' // 최신 버전 사용
	implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.4'
	compileOnly 'org.projectlombok:lombok:1.18.32'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	annotationProcessor 'org.projectlombok:lombok:1.18.32'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter-test:3.0.4'
	testImplementation 'com.h2database:h2'
	
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    // Redis 사용을 위한 의존성
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
     // 이메일 전송 (이미 있을 수도 있음)
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'
    	// log4j
	implementation 'org.apache.logging.log4j:log4j-api:2.19.0'
	implementation 'org.apache.logging.log4j:log4j-core:2.19.0'
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5' // JSON 처리를 위한 Jackson
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    runtimeOnly 'com.h2database:h2' // H2 DB 테스트용
}

tasks.named('test') {
	useJUnitPlatform()
}
